import{Tea as e}from"../models/tea.min.js";export{t as TeaController};class t{static teas=[];static teasInBasket=[];static addTea=e=>this.teas.push(e);static getTeas=()=>this.teas;static getTeaById=e=>this.teas.find((t=>t.id==e));static updateTea=(e,t)=>this.teas[this.teas.findIndex((t=>t.id==e))]=t;static deleteTea=e=>this.teas=this.teas.filter((t=>t.id!=e));static async renderTeas(e){e.innerHTML="";let t=this.getTeas(),a=document.getElementById("filter-price").value,s=[];for(let e=0;e<this.getTeas().length;e++){let t=this.getTeas()[e].name,a=document.getElementById(t);a&&a.checked&&s.push(t)}/[+-]?([0-9]*[.])?[0-9]+/.test(a)&&(t=this.getTeas().filter((e=>e.price<=a))),s.length>0&&(t=t.filter((e=>s.includes(e.name)))),t.forEach((t=>{e.innerHTML+=t.render()}))}static async renderThreeTeas(e){const t=this.getTeas();for(let a=0;a<3;a++)e.innerHTML+=t[a].render()}static async loadTeasFromJSON(){await fetch("data/teas.json").then((e=>e.json())).then((t=>{t.forEach((t=>{const a=new e(t.id,t.name,t.description,t.price,t.image);this.addTea(a)}))})).catch((e=>console.error(e)))}static async renderNamesForFilter(){const e=document.getElementById("filter-names");this.getTeas().forEach((t=>{e.innerHTML+=`\n                <label class="form-check-label" for="${t.name}">${t.name}</label>\n                <input type="checkbox" class="form-check-input" id="${t.name}"><br>\n            `}))}static addTeaToBasket(e){this.loadTeasFromCookies();const t=this.teasInBasket.find((t=>t.id==e.id));t?(t.amount=t.amount+1,console.log("Tea amount increased!"),console.log(this.teasInBasket)):(e.amount=1,this.teasInBasket.push(e)),this.saveTeasToCookies(),this.updateCartCount()}static loadTeasFromCookies(){const t=document.cookie.split(";").find((e=>e.includes("teasInBasket")));if(t){const a=JSON.parse(t.split("=")[1]);this.teasInBasket=a.map((t=>new e(t.id,t.name,t.description,t.price,t.image,t.amount)))}}static saveTeasToCookies(){document.cookie=`teasInBasket=${JSON.stringify(this.teasInBasket)}; path=/`}static removeTeaFromBasket(e){this.teasInBasket=this.teasInBasket.filter((t=>t.id!=e)),this.saveTeasToCookies(),this.loadTeasFromCookies(),this.renderTeasInBasket(document.getElementById("cart-container")),this.updateCartCount()}static renderTeasInBasket(e){this.loadTeasFromCookies(),e.innerHTML="",document.getElementById("total-price").textContent="Total price: "+this.getTotalPrice()+"€",this.teasInBasket.forEach((a=>{e.innerHTML+=a.renderForCart(),setTimeout((()=>{document.getElementById(`amount${a.id}`).value=a.amount,document.getElementById(`amount${a.id}`).addEventListener("change",(()=>{const e=parseInt(document.getElementById(`amount${a.id}`).value);e>0?a.amount=e:(a.amount=1,document.getElementById(`amount${a.id}`).value=1),this.saveTeasToCookies(),document.getElementById("total-price").textContent="Total price: "+this.getTotalPrice()+"€"})),document.querySelectorAll(".remove-from-basket-btn").forEach((e=>{e.addEventListener("click",(e=>{const a=parseInt(e.target.getAttribute("data-tea-id"));t.removeTeaFromBasket(a)}))}))}),0)}))}static getAmountOfTeasInBasket(){return this.loadTeasFromCookies(),this.teasInBasket.length}static updateCartCount(){document.getElementById("cart-count").textContent=this.getAmountOfTeasInBasket()}static getTotalPrice(){return this.teasInBasket.reduce(((e,t)=>e+t.price*t.amount),0).toFixed(2)}}